version: '3.8'

services:
  # Neo4j Graph Database for geometric relationships
  neo4j:
    image: neo4j:5.15
    container_name: nerv-neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/nervgeometry
      - NEO4J_PLUGINS=["apoc", "gds"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - ./backend/database/neo4j-init:/var/lib/neo4j/import
    networks:
      - nerv-network

  # PostgreSQL for user data and sessions
  postgres:
    image: postgres:15
    container_name: nerv-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=nerv
      - POSTGRES_USER=nerv_user
      - POSTGRES_PASSWORD=nerv_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/migrations:/docker-entrypoint-initdb.d
    networks:
      - nerv-network

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: nerv-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - nerv-network

  # Python FastAPI backend
  python-api:
    build:
      context: ./backend/python-api
      dockerfile: Dockerfile
    container_name: nerv-python-api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://nerv_user:nerv_password@postgres:5432/nerv
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=nervgeometry
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - neo4j
      - redis
    volumes:
      - ./backend/python-api:/app
      - ./backend/rust-core/target/release:/rust-binaries
    networks:
      - nerv-network
    develop:
      watch:
        - action: sync
          path: ./backend/python-api
          target: /app

  # Rust WebAssembly builder (development)
  rust-wasm-builder:
    build:
      context: ./backend/rust-core
      dockerfile: Dockerfile.wasm
    container_name: nerv-rust-wasm
    volumes:
      - ./backend/rust-core:/usr/src/app
      - ./frontend/src/wasm:/output
    networks:
      - nerv-network
    profiles:
      - build

  # Frontend development server
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: nerv-frontend-dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_WS_URL=ws://localhost:8000/ws
    networks:
      - nerv-network
    profiles:
      - dev

volumes:
  neo4j_data:
  neo4j_logs:
  postgres_data:
  redis_data:

networks:
  nerv-network:
    driver: bridge